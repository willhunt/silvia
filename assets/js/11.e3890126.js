(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{363:function(t,e,a){"use strict";a.r(e);var r=a(42),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"power-control"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#power-control"}},[t._v("#")]),t._v(" Power Control")]),t._v(" "),a("p",[t._v("Digital power control was implemented by rewiring the power switch connections to a relay. The switch can be used indirectly to power the machine by wiring to a digital microcontroller pin. The main power switch is a double pole, single throw (DPST) switch, connecting both the live and neutral circuits. To replace this a dual relay was used. The relay used requires 12V to switch so a mosfet is needed to switch from the microcontroller output (5V with Arduino) to a higher 12V circuit. It would have been better to use a relay with a 5V coil voltage but this is what I had available.")]),t._v(" "),a("h2",{attrs:{id:"components"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#components"}},[t._v("#")]),t._v(" Components")]),t._v(" "),a("ul",[a("li",[t._v("T92P7D22-12 DPST-NO Relay ["),a("a",{attrs:{href:"https://www.te.com/commerce/DocumentDelivery/DDEController?Action=showdoc&DocId=Data+Sheet%7F1308242_T92%7F0910%7Fpdf%7FEnglish%7FENG_DS_1308242_T92_0910.pdf%7F4-1393211-0",target:"_blank",rel:"noopener noreferrer"}},[t._v("datasheet"),a("OutboundLink")],1),t._v("]\n"),a("ul",[a("li",[t._v("277V, 30A")]),t._v(" "),a("li",[t._v("Dual relay")]),t._v(" "),a("li",[t._v("12V coil voltage")])])]),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/build/power-supply.html"}},[t._v("12VDC power supply")])],1),t._v(" "),a("li",[t._v("IRF520 Mosfet ["),a("a",{attrs:{href:"https://www.vishay.com/docs/91017/91017.pdf",target:"_blank",rel:"noopener noreferrer"}},[t._v("datasheet"),a("OutboundLink")],1),t._v("]\n"),a("ul",[a("li",[t._v("Gate threshold voltage 4V")]),t._v(" "),a("li",[t._v("Drain-source voltage 100V")])])])]),t._v(" "),a("h2",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),a("DocsImageLayout",{attrs:{images:t.$frontmatter.images_installation,srcBase:"/silvia/assets/build/"}}),t._v(" "),a("h2",{attrs:{id:"wiring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wiring"}},[t._v("#")]),t._v(" Wiring")]),t._v(" "),a("p",[t._v("The Arduino switches the mechanical relay with 12V (supplied through barrel jack) with an IRF520 mosfet. A 1kâ„¦ pull-down resistor is used to ensure the mosfet input is at 0V when the output in not high. The raspberry pi detects the switch operation via a GPIO pin. This does not require a pull up/down resistor as they are built in.")]),t._v(" "),a("DocsImageLayout",{attrs:{images:t.$frontmatter.images_wiring,size:"lg",srcBase:"/silvia/assets/build/"}}),t._v(" "),a("h2",{attrs:{id:"software"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#software"}},[t._v("#")]),t._v(" Software")]),t._v(" "),a("h3",{attrs:{id:"raspberry-pi-interrupt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#raspberry-pi-interrupt"}},[t._v("#")]),t._v(" Raspberry pi interrupt")]),t._v(" "),a("p",[t._v("The raspberry pi gpiozero "),a("a",{attrs:{href:"https://gpiozero.readthedocs.io/en/stable/api_input.html#gpiozero.Button",target:"_blank",rel:"noopener noreferrer"}},[t._v("Button class"),a("OutboundLink")],1),t._v(" is used to detect switch operation which then communicates to the Arduino over I2C via "),a("a",{attrs:{href:"https://github.com/celery/celery",target:"_blank",rel:"noopener noreferrer"}},[t._v("Celery"),a("OutboundLink")],1),t._v(" asyncrhonus tasks.")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" gpiozero "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Button\n\nbutton_power "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Button"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nbutton_power"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("when_pressed "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" trigger_machine_on\nbutton_power"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("when_released "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" trigger_machine_off\n")])])]),a("p",[t._v("The python interrupt file is registered as a django management command:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("$ python manage.py raspi_interrupt\n")])])]),a("h3",{attrs:{id:"arduino-relay-control"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#arduino-relay-control"}},[t._v("#")]),t._v(" Arduino relay control")]),t._v(" "),a("p",[t._v("A generic relay control class was used to operate the relays through the standard Arduino interface with the relevant "),a("code",[t._v("on()")]),t._v(" method being:")]),t._v(" "),a("div",{staticClass:"language-cpp extra-class"},[a("pre",{pre:!0,attrs:{class:"language-cpp"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" RelayOutput"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("::")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  status_ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("digitalWrite")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pin_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" HIGH"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])])],1)}),[],!1,null,null,null);e.default=s.exports}}]);